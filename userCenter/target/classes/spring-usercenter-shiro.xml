<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- AOP式方法级权限检查  -->
    <!--<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">-->
        <!--<property name="proxyTargetClass" value="true" />-->
    <!--</bean>-->

     <!--缓存管理器 使用Ehcache实现-->
    <!--<bean id="cacheManager" name="cacheManager2" class="org.apache.shiro.cache.ehcache.EhCacheManager">-->
        <!--<property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>-->
    <!--</bean>-->
    <!--<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager" />-->
    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher" class="com.manyi.usercenter.shiro.credentials.RetryLimitHashedCredentialsMatcher">
        <!--<constructor-arg ref="cacheManager"/>-->
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
        <!-- 表示是否存储散列后的密码为16进制，需要和生成密码时的一样，默认是base64 -->
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>

    <!-- Realm实现 -->
    <bean id="userRealm" class="com.manyi.usercenter.shiro.realm.UserRealm">
        <!--<property name="credentialsMatcher" ref="credentialsMatcher"/>-->
        <!--<property name="cachingEnabled" value="true"/>-->
        <!--<property name="authenticationCachingEnabled" value="true"/>-->
        <!--<property name="authenticationCacheName" value="authenticationCache"/>-->
        <!--<property name="authorizationCachingEnabled" value="true"/>-->
        <!--<property name="authorizationCacheName" value="authorizationCache"/>-->
    </bean>


    <!-- 基于Form表单的身份验证过滤器 -->
    <!--<bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">-->
        <!--<property name="usernameParam" value="username"/>-->
        <!--<property name="passwordParam" value="password"/>-->
        <!--<property name="rememberMeParam" value="rememberMe"/>-->
        <!--&lt;!&ndash;<property name="loginUrl" value="/login"/>&ndash;&gt;-->
    <!--</bean>-->



    <!-- Shiro Filter -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <bean id="filterChainResolver"
          class="com.manyi.usercenter.shiro.filter.CustomPathMatchingFilterChainResolver">
        <property name="customDefaultFilterChainManager" ref="filterChainManager"/>
    </bean>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm" />
        <!--<property name="cacheManager" ref="cacheManager"/>-->
    </bean>

    <bean id="roleOrFilter" class="com.manyi.usercenter.shiro.filter.CustomRolesAuthorizationFilter"/>
    <bean id="statelessAuthcFilter" class="com.manyi.usercenter.shiro.filter.StatelessAuthcFilter"/>

    <bean id="filterChainManager" class="com.manyi.usercenter.shiro.filter.CustomDefaultFilterChainManager">
        <!--<property name="loginUrl" value="/html/index.html"/>-->
        <!--<property name="successUrl" value="/index"/>-->
        <property name="unauthorizedUrl" value="/usercenter/unauthorized"/>

        <property name="customFilters">
            <util:map>
                <!--<entry key="authc" value-ref="formAuthenticationFilter"/>-->
                <entry key="roleOr" value-ref="roleOrFilter"/><!--角色or过滤-->
                <entry key="statelessAuthc" value-ref="statelessAuthcFilter"/>
            </util:map>
        </property>
        <property name="defaultFilterChainDefinitions">
            <value>
                <!--/usercenter/login = anon-->
                /usercenter/login = anon
                /usercenter/sentMessageCode = anon
                /usercenter/unauthorized = anon
                /html/** = anon
                /static/** = anon
                /index.html = anon
                /logout = logout
                /unauthorized.jsp = authc
                /admin/sysRole/** = statelessAuthc[user]
                <!--/** = anon-->
                <!--/admin/**=role[admin]-->
                <!--/** = user,sysUser-->
            </value>
        </property>
    </bean>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" ref="shiroFilter"/>
        <property name="targetMethod" value="setFilterChainResolver"/>
        <property name="arguments" ref="filterChainResolver"/>
    </bean>

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
</beans>
