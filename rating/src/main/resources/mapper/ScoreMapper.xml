<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.manyi.rating.support.dao.ScoreDao">

    <!-- 评价主表 -->
    <resultMap id="AllScoreResultMap" type="com.manyi.rating.entity.score.Score">
        <result column="id" property="id"/>
        <result column="TradeOrder" property="tradeOrder"/>
        <result column="GraderID" property="graderID"/>
        <result column="CommodityID" property="commodityID"/>
        <result column="GradeStrategyID" property="gradeStrategyID"/>
        <result column="ChannelID" property="channelID"/>
        <result column="EvaluateTime" property="evaluateTime"/>
        <result column="EvaluateContent" property="evaluateContent"/>
        <result column="TotalScore" property="totalScore"/>
    </resultMap>

    <!-- 评分明细 -->
    <resultMap id="ScoreItemResultMap" type="com.manyi.rating.entity.score.ScoreItem">
        <result column="scoreid" property="scoreid"/>
        <result column="ItermScore" property="itemScore"/>
        <result column="name" property="name"/>
        <result column="Weight" property="weight"/>
    </resultMap>

    <!-- 评价回复 -->
    <resultMap id="ScoreReplyResultMap" type="com.manyi.rating.entity.score.ScoreReply">
        <result column="scoreid" property="scoreid"/>
        <result column="ReplyFlag" property="replyFlag"/>
        <result column="ReplyContent" property="replyContent"/>
        <result column="ReplyTime" property="replyTime"/>
    </resultMap>

    <!-- 基础字段 -->
    <sql id="Base_Column_List">
        id, TradeOrder, GraderID, CommodityID, GradeStrategyID, ChannelID, EvaluateTime, EvaluateContent,TotalScore
    </sql>

    <!-- 查询被评价者所有评价主表条数 -->
    <select id="getAllScoreCount" resultType="java.lang.Integer">
        SELECT
        count(*)
        FROM t_EvaluateBasis
        WHERE
        channelID = #{channelID}
        AND GradedID=#{gradedID}
        AND commodityID=#{commodityID}
    </select>

    <!-- 查询被评价者所有评价主表信息 -->
    <select id="getAllScore" resultMap="AllScoreResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_EvaluateBasis
        WHERE
        channelID = #{channelID}
        AND GradedID=#{gradedID}
        AND commodityID=#{commodityID}
        limit #{startIndex},#{pageSize}
    </select>

    <!-- 根据评价者查询所有评价主表信息条数 -->
    <select id="getAllScoreCountOfGrader" resultType="java.lang.Integer">
        SELECT
        COUNT(*)
        FROM t_EvaluateBasis
        WHERE
        channelID = #{channelID}
        AND GraderID=#{graderID}
    </select>

    <!-- 根据评价者查询所有评价主表信息 -->
    <select id="getAllScoreOfGrader" resultMap="AllScoreResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_EvaluateBasis
        WHERE
        channelID = #{channelID}
        AND GraderID=#{graderID}
        limit #{startIndex},#{pageSize}
    </select>


    <!-- 查询指定评价评分表明细 -->
    <select id="getScoreItem" resultMap="ScoreItemResultMap">
        SELECT
        t_Score.id,ItemId,ItemScore,name,Weight,scoreid
        FROM t_Score,t_ItemDetail
        WHERE
        scoreid = #{basisID}
        AND t_Score.ItemId=t_ItemDetail.id
    </select>

    <!-- 查询指定评价回复表明细 -->
    <select id="getScoreReply" resultMap="ScoreReplyResultMap">
        SELECT
        id,scoreid,replyFlag,replyContent,replyTime
        FROM t_ReplyContent
        WHERE
        scoreid = #{basisID}
        ORDER BY replyTime
    </select>

    <!-- 查询被评价者指定时间段内所有评价 -->
    <select id="getScoreCountByTime" resultType="java.lang.Integer">
        SELECT
        count(*)
        FROM t_EvaluateBasis
        WHERE
        channelID = #{channelID}
        AND GradedID=#{gradedID}
        AND EvaluateTime BETWEEN #{startTime} AND #{endTime}
    </select>

    <!-- 查询被评价者指定时间段内所有评价 -->
    <select id="getScoreByTime" resultMap="AllScoreResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_EvaluateBasis
        WHERE
        channelID = #{channelID}
        AND GradedID=#{gradedID}
        AND EvaluateTime BETWEEN #{startTime} AND #{endTime}
        limit #{startIndex},#{pageSize}
    </select>

    <!-- 修改评分 -->
    <update id="modifyScore" parameterType="com.manyi.rating.entity.score.ScoreItem">
        UPDATE
        t_Score
        <set>
            <if test="itemScore != null">ItemScore = #{itemScore}</if>
        </set>
        WHERE itemid = #{itemId}
        AND scoreid=#{scoreid}
    </update>

    <!-- 修改评价 -->
    <update id="modifyEvaluate" parameterType="com.manyi.rating.entity.score.Score">
        UPDATE
        t_EvaluateBasis
        <set>
            <if test="evaluateContent != null">EvaluateContent = #{evaluateContent}</if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- 删除评分 -->
    <update id="deleteScore" parameterType="java.lang.Long">
        DELETE FROM
        t_Score
        WHERE scoreid = #{id}
    </update>

    <!-- 删除评价 -->
    <update id="deleteEvaluate" parameterType="java.lang.Long">
        DELETE FROM
        t_EvaluateBasis
        WHERE id = #{id}
    </update>

    <!-- 添加评价 -->
    <insert id="addScore" parameterType="com.manyi.rating.entity.score.Score"
            useGeneratedKeys="true" keyProperty="id">
        <selectKey keyProperty="id" resultType="long">
            select LAST_INSERT_ID()
        </selectKey>
        INSERT INTO
        t_EvaluateBasis
        (tradeOrder,graderID,gradedID,commodityID,gradeStrategyID,channelID,evaluateTime,evaluateContent,totalScore)
        values
         (#{tradeOrder},#{graderID},#{gradedID},#{commodityID},#{gradeStrategyID}
         ,#{channelID},#{evaluateTime},#{evaluateContent},#{totalScore})
    </insert>

    <!-- 添加评价子项 -->
    <insert id="addScoreItem" parameterType="com.manyi.rating.entity.score.ScoreItem"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
        t_Score
        (itemId,itemScore,scoreid)
        values
        (#{itemId},#{itemScore},#{scoreid})
    </insert>


    <!-- 追加评价 -->
    <insert id="addScoreReply" parameterType="com.manyi.rating.entity.score.ScoreReply"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
        t_ReplyContent
        (replyFlag,replyContent,replyTime,scoreid)
        values
        (#{replyFlag},#{replyContent},#{replyTime},#{scoreid})
    </insert>

</mapper>